plugins {
    id 'maven-publish'
    id 'java'
    id "dev.architectury.loom" version "1.0.311"
/*    id 'com.github.johnrengelman.shadow' version '7.1.2'*/
    id 'org.ajoberstar.grgit' version '4.1.1'
}

project.ext {
    // Open the Git repository in the current directory.
    git = org.ajoberstar.grgit.Grgit.open(dir: file('.'))
    // Get commit id of HEAD.
    gitRevision = git.head().id
    // Get abbreviated commit Id of HEAD
    gitAbbRevision = git.head().abbreviatedId
}

version = project.minecraft_version + "-" + gitAbbRevision
group = "ca.shadownode.shadowessentials"

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://gitlab.com/api/v4/projects/38224197/packages/maven'
    }
    maven {
        url "https://jitpack.io/"
    }
    maven {
        name 'Gegy'
        url 'https://maven.gegy.dev'
    }
    maven {
        name = 'sponge-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = "sonatype-oss-snapshots"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

loom {
    // use this if you are using the official mojang mappings
    // and want loom to stop warning you about their license
    silentMojangMappingsLicense()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    forge "net.minecraftforge:forge:${project.forge_version}"

    implementation include('net.kyori:adventure-api:4.12.0')
    implementation include('net.kyori:adventure-text-serializer-gson:4.12.0')
    implementation include('net.kyori:adventure-text-serializer-legacy:4.12.0')
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    archivesBaseName = project.name
}

group = pluginGroup
version = gitAbbRevision


jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

task copyJar(type: Copy) {
    from 'build/libs'
    include rootProject.name + '-' + version + '.jar'
    String server = System.getenv("TEST_SERVER");
    if (server != null)
        into file("$server/custom/plugins")
}

task deleteFiles(type: Delete) {
    String server = System.getenv("TEST_SERVER")
    if (server != null) {
        delete fileTree("$server/custom/plugins") {
            include rootProject.name + '-*.jar'
        }
    }
}